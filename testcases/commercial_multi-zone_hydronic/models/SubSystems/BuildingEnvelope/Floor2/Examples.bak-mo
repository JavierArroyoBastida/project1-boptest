within INFRAX.SubSystems.BuildingEnvelope.Floor2;
package Examples

  model ZoneExample
    "Example model demonstrating how zones may be connected to surfaces"
    package Medium = IDEAS.Media.Air;
    extends Modelica.Icons.Example;
    parameter Modelica.SIunits.Length l = 4 "Room length";
    parameter Modelica.SIunits.Length w = 4 "Room width";
    parameter Modelica.SIunits.Length h = 2.7 "Room height";
    inner IDEAS.BoundaryConditions.SimInfoManager sim "Data reader"
      annotation (Placement(transformation(extent={{-96,76},{-76,96}})));
    IDEAS.Buildings.Components.Zone zone(
      redeclare package Medium = Medium,
      allowFlowReversal=true,
      nSurf=3,
      V=l*w*h) "First zone"
      annotation (Placement(transformation(extent={{0,-40},{20,-20}})));
    IDEAS.Buildings.Components.InternalWall internalWall(
      redeclare parameter IDEAS.Buildings.Validation.Data.Constructions.HeavyWall
        constructionType,
      azi=0,
      inc=IDEAS.Types.Tilt.Wall,
      A=l*w)                 "Internal wall model" annotation (Placement(
          transformation(
          extent={{6,-10},{-6,10}},
          rotation=90,
          origin={-10,0})));

    IDEAS.Buildings.Components.Window window(
      redeclare parameter IDEAS.Buildings.Data.Glazing.Ins2 glazing,
      redeclare IDEAS.Buildings.Data.Frames.Pvc fraType,
      inc=IDEAS.Types.Tilt.Wall,
      azi=IDEAS.Types.Azimuth.S,
      A=2)                       "Window model"
      annotation (Placement(transformation(extent={{-56,40},{-44,60}})));
    IDEAS.Buildings.Components.SlabOnGround slabOnGround(
      redeclare parameter IDEAS.Buildings.Validation.Data.Constructions.LightWall
        constructionType,
      A=l*w,
      PWall=2*(l + w))
             "Floor model"
      annotation (Placement(transformation(extent={{-56,-40},{-44,-20}})));
    IDEAS.Buildings.Components.OuterWall outerWall(
      azi=0,
      redeclare parameter IDEAS.Buildings.Validation.Data.Constructions.HeavyWall constructionType,
      inc=IDEAS.Types.Tilt.Wall,
      A=(l + w)*2*h)         "Outer wall model"
      annotation (Placement(transformation(extent={{-56,-60},{-44,-40}})));
    IDEAS.Buildings.Components.Zone zone1(
      redeclare package Medium = Medium,
      allowFlowReversal=true,
      nSurf=4,
      V=l*w*h) "Second zone"
      annotation (Placement(transformation(extent={{0,20},{20,40}})));
    IDEAS.Buildings.Components.OuterWall outerWall1(
      redeclare parameter IDEAS.Buildings.Validation.Data.Constructions.HeavyWall constructionType,
      inc=IDEAS.Types.Tilt.Wall,
      azi=IDEAS.Types.Azimuth.S,
      A=(l + w)*2*h - window.A)  "Outer wall model"
      annotation (Placement(transformation(extent={{-56,20},{-44,40}})));
    IDEAS.Buildings.Components.OuterWall Roof(
      azi=0,
      A=10,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.LightRoof
                                                        constructionType,
      inc=IDEAS.Types.Tilt.Ceiling) "Roof model"
      annotation (Placement(transformation(extent={{-56,60},{-44,80}})));
  equation
    connect(internalWall.propsBus_a, zone.propsBus[1]) annotation (Line(
        points={{-12,-5},{-12,-24.6667},{0,-24.6667}},
        color={255,204,51},
        thickness=0.5));
    connect(slabOnGround.propsBus_a, zone.propsBus[2]) annotation (Line(
        points={{-45,-28},{-22,-28},{-22,-26},{0,-26}},
        color={255,204,51},
        thickness=0.5));
    connect(outerWall.propsBus_a, zone.propsBus[3]) annotation (Line(
        points={{-45,-48},{-20,-48},{-20,-27.3333},{0,-27.3333}},
        color={255,204,51},
        thickness=0.5));
    connect(Roof.propsBus_a, zone1.propsBus[1]) annotation (Line(
        points={{-45,72},{-45,72},{-12,72},{-12,35.5},{0,35.5}},
        color={255,204,51},
        thickness=0.5));
    connect(window.propsBus_a, zone1.propsBus[2]) annotation (Line(
        points={{-45,52},{-45,52},{-14,52},{-14,34.5},{0,34.5}},
        color={255,204,51},
        thickness=0.5));
    connect(outerWall1.propsBus_a, zone1.propsBus[3]) annotation (Line(
        points={{-45,32},{-14,32},{-14,33.5},{0,33.5}},
        color={255,204,51},
        thickness=0.5));
    connect(internalWall.propsBus_b, zone1.propsBus[4]) annotation (Line(
        points={{-12,5},{-12,5},{-12,14},{-12,32.5},{0,32.5}},
        color={255,204,51},
        thickness=0.5));
    annotation (Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,
              -100},{100,100}})),           __Dymola_Commands(file=
            "Resources/Scripts/Dymola/Buildings/Examples/ZoneExample.mos"
          "Simulate and plot"),
      Documentation(revisions="<html>
<ul>
<li>
January 2, 2017 by Filip Jorissen:<br/>
Revised implementation.
</li>
<li>
July 18, 2016 by Filip Jorissen:<br/>
Cleaned up code and implementation.
</li>
<li>
By Filip Jorissen:<br/>
First implementation.
</li>
</ul>
</html>"));
  end ZoneExample;

  model Floor2_Simple

    inner IDEAS.BoundaryConditions.SimInfoManager sim "Data reader"
      annotation (Placement(transformation(extent={{-96,76},{-76,96}})));
    IDEAS.Buildings.Components.RectangularZoneTemplate cellenkantoor(
      redeclare package Medium = IDEAS.Media.Air,
      aziA=IDEAS.Types.Azimuth.N,
      h=2.8,
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.BoundaryWall,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      hasWinA=true,
      A_winA=4,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      nSurfExt=2,
      l=35,
      w=20) annotation (Placement(transformation(extent={{-20,20},{20,58}})));

    IDEAS.Buildings.Components.RectangularZoneTemplate landschapkantoor(
      redeclare package Medium = IDEAS.Media.Air,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      aziA=IDEAS.Types.Azimuth.N,
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
      nSurfExt=6,
      l=35,
      w=20,
      h=2.8) annotation (Placement(transformation(extent={{-20,-78},{20,-40}})));

    IDEAS.Buildings.Components.RectangularZoneTemplate vergaderzaalWest(
      redeclare package Medium = IDEAS.Media.Air,
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      aziA=IDEAS.Types.Azimuth.N,
      h=2.8,
      l=5,
      w=2) annotation (Placement(transformation(extent={{-60,-16},{-40,4}})));

    IDEAS.Buildings.Components.RectangularZoneTemplate vergaderzaalEast(
      redeclare package Medium = IDEAS.Media.Air,
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      nSurfExt=0,
      aziA=IDEAS.Types.Azimuth.N,
      h=2.8,
      l=5,
      w=2) annotation (Placement(transformation(extent={{40,-16},{60,4}})));

  equation
    connect(landschapkantoor.proBusA, cellenkantoor.proBusC) annotation (Line(
        points={{-12,-41.9},{-12,-41.9},{-12,-10},{0,-10},{0,21.9}},
        color={255,204,51},
        thickness=0.5));
    connect(vergaderzaalWest.proBusA, cellenkantoor.proBusExt[1]) annotation (
        Line(
        points={{-56,3},{-52,3},{-52,44},{-52,56},{-24,56},{-24,56.1}},
        color={255,204,51},
        thickness=0.5));
    connect(vergaderzaalEast.proBusA, cellenkantoor.proBusExt[2]) annotation (
        Line(
        points={{44,3},{42,3},{42,64},{42,68},{-24,68},{-24,59.9}},
        color={255,204,51},
        thickness=0.5));
    connect(vergaderzaalWest.proBusB, landschapkantoor.proBusExt[1])
      annotation (Line(
        points={{-41,0},{-32,0},{-24,0},{-24,-43.1667}},
        color={255,204,51},
        thickness=0.5));
    connect(vergaderzaalWest.proBusC, landschapkantoor.proBusExt[2])
      annotation (Line(
        points={{-50,-15},{-50,-15},{-50,-41.9},{-24,-41.9}},
        color={255,204,51},
        thickness=0.5));
    connect(vergaderzaalWest.proBusD, landschapkantoor.proBusExt[3])
      annotation (Line(
        points={{-59,-6},{-60,-6},{-60,-42},{-60,-40.6333},{-24,-40.6333}},
        color={255,204,51},
        thickness=0.5));
    connect(vergaderzaalEast.proBusB, landschapkantoor.proBusExt[4])
      annotation (Line(
        points={{59,0},{58,0},{58,-38},{58,-39.3667},{-24,-39.3667}},
        color={255,204,51},
        thickness=0.5));
    connect(vergaderzaalEast.proBusC, landschapkantoor.proBusExt[5])
      annotation (Line(
        points={{50,-15},{14,-15},{14,-32},{-24,-32},{-24,-38.1}},
        color={255,204,51},
        thickness=0.5));
    connect(vergaderzaalEast.proBusD, landschapkantoor.proBusExt[6])
      annotation (Line(
        points={{41,-6},{12,-6},{12,-20},{-24,-20},{-24,-36.8333}},
        color={255,204,51},
        thickness=0.5));
  annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
          Ellipse(lineColor = {75,138,73},
                  fillColor={255,255,255},
                  fillPattern = FillPattern.Solid,
                  extent = {{-100,-100},{100,100}}),
          Polygon(lineColor = {0,0,255},
                  fillColor = {75,138,73},
                  pattern = LinePattern.None,
                  fillPattern = FillPattern.Solid,
                  points = {{-36,60},{64,0},{-36,-60},{-36,60}})}),
                                                                 Diagram(
        coordinateSystem(preserveAspectRatio=false)));
  end Floor2_Simple;

  model Floor2_Sim



    IDEAS.Buildings.Components.RectangularZoneTemplate stairsW(
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare package Medium = IDEAS.Media.Air,
      aziA=IDEAS.Types.Azimuth.N,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      redeclare IDEAS.Buildings.Data.Constructions.FloorOnGround conTypCei,
      redeclare Data.Constructions.TABSfloor conTypFlo,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypA,
      l=4.85,
      w=4.5,
      h=2.93,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.LightWall conTypB,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.LightWall conTypC,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.LightWall conTypD)
      annotation (Placement(transformation(extent={{-78,-10},{-58,10}})));
    IDEAS.Buildings.Components.RectangularZoneTemplate stairsE(
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare package Medium = IDEAS.Media.Air,
      aziA=IDEAS.Types.Azimuth.N,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypA,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypB,
      redeclare IDEAS.Buildings.Data.Constructions.TABS conTypCei,
      redeclare IDEAS.Buildings.Data.Constructions.FloorOnGround conTypFlo,
      l=4.85,
      w=4.5,
      h=2.93,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.LightWall conTypC,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.LightWall conTypD)
      annotation (Placement(transformation(extent={{58,-10},{78,10}})));
    IDEAS.Buildings.Components.OuterWall[6] flo(
      redeclare IDEAS.Buildings.Data.Constructions.FloorOnGround constructionType,
      inc=IDEAS.Types.Tilt.Floor,
      azi=0,
      A=str2ndFlr.Atotal2ndFlr) annotation (Placement(transformation(
          extent={{-6,-10},{6,10}},
          rotation=90,
          origin={2,-50})));

    IDEAS.Buildings.Components.OuterWall[6] cei(
      redeclare Data.Constructions.TABSfloor constructionType,
      inc=IDEAS.Types.Tilt.Ceiling,
      azi=0,
      A=str2ndFlr.Atotal2ndFlr) annotation (Placement(transformation(
          extent={{-6,-10},{6,10}},
          rotation=-90,
          origin={2,48})));
    Data.Parameters.Str2ndFlr str2ndFlr
      annotation (Placement(transformation(extent={{80,-100},{100,-80}})));
    inner IDEAS.BoundaryConditions.SimInfoManager sim(
      incAndAziInBus={{IDEAS.Types.Tilt.Floor,0},{IDEAS.Types.Tilt.Ceiling,0},{
          IDEAS.Types.Tilt.Wall,0},{IDEAS.Types.Tilt.Wall,IDEAS.Types.Azimuth.E},{
          IDEAS.Types.Tilt.Wall,IDEAS.Types.Azimuth.W},{IDEAS.Types.Tilt.Wall,
          IDEAS.Types.Azimuth.N}},
      nWindow=5,
      nLayWin=3)                                      "Data reader"
      annotation (Placement(transformation(extent={{-100,80},{-80,100}})));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
          Ellipse(lineColor = {75,138,73},
                  fillColor={255,255,255},
                  fillPattern = FillPattern.Solid,
                  extent = {{-100,-100},{100,100}}),
          Polygon(lineColor = {0,0,255},
                  fillColor = {75,138,73},
                  pattern = LinePattern.None,
                  fillPattern = FillPattern.Solid,
                  points = {{-36,60},{64,0},{-36,-60},{-36,60}})}),Diagram(
          coordinateSystem(preserveAspectRatio=false)));
  end Floor2_Sim;

  model Floor2_STABLE

    inner IDEAS.BoundaryConditions.SimInfoManager sim "Data reader"
      annotation (Placement(transformation(extent={{-140,80},{-120,100}})));
    Data.Parameters.Str2ndFlr str2ndFlr
      annotation (Placement(transformation(extent={{120,-100},{140,-80}})));
    IDEAS.Buildings.Components.Window northWindows(
      inc=IDEAS.Types.Tilt.Wall,
      azi=IDEAS.Types.Azimuth.N,
      A=str2ndFlr.AWindows_2ndFlr_NZ,
      frac=str2ndFlr.FrameRatio_2ndFlr_NZ,
      redeclare IDEAS.Buildings.Data.Glazing.Ins2ArGold glazing,
      redeclare IDEAS.Buildings.Data.Frames.Aluminium fraType,
      redeclare IDEAS.Buildings.Components.Shading.None shaType)
                                       annotation (Placement(transformation(
          extent={{-6,-10},{6,10}},
          rotation=-90,
          origin={112,92})));
    IDEAS.Buildings.Components.OuterWall northWall(inc=IDEAS.Types.Tilt.Wall, azi=
         IDEAS.Types.Azimuth.N,
      A=str2ndFlr.AWall_2ndFlr_NZ,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall constructionType)
                                annotation (Placement(transformation(
          extent={{-6,-10},{6,10}},
          rotation=-90,
          origin={88,92})));
    IDEAS.Buildings.Components.Zone northZone(redeclare package Medium =
          IDEAS.Media.Air,
      V=str2ndFlr.Vol_2ndFlr_NZ,
      hZone=str2ndFlr.Height2ndFlr,
      nSurf=5)
      annotation (Placement(transformation(extent={{20,40},{60,80}})));
    IDEAS.Buildings.Components.RectangularZoneTemplate meetingRoom1(
      redeclare package Medium = IDEAS.Media.Air,
      aziA=IDEAS.Types.Azimuth.N,
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      l=str2ndFlr.l_2ndFlr_MTR1,
      w=str2ndFlr.w_2ndFlr_MTR1,
      h=str2ndFlr.Height2ndFlr,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall10 conTypA,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
        conTypFlo,
      nSurfExt=0,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypCei,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall18 conTypB,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall10 conTypC,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall10 conTypD)
      annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));
    IDEAS.Buildings.Components.RectangularZoneTemplate copyRooms(
      redeclare package Medium = IDEAS.Media.Air,
      aziA=IDEAS.Types.Azimuth.N,
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      l=str2ndFlr.l_2ndFlr_CPR,
      w=str2ndFlr.w_2ndFlr_CPR,
      h=str2ndFlr.Height2ndFlr,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall10 conTypA,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypB,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypD,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
        conTypFlo,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypCei,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.External,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall10 conTypC,
      nSurfExt=1)
      annotation (Placement(transformation(extent={{-10,-10},{10,10}})));
    IDEAS.Buildings.Components.RectangularZoneTemplate meetingRoom2(
      redeclare package Medium = IDEAS.Media.Air,
      aziA=IDEAS.Types.Azimuth.N,
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      l=str2ndFlr.l_2ndFlr_MTR2,
      w=str2ndFlr.w_2ndFlr_MTR2,
      h=str2ndFlr.Height2ndFlr,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,
      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall10 conTypA,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
        conTypFlo,
      nSurfExt=0,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypCei,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall18 conTypD,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall10 conTypC,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare IDEAS.Examples.PPD12.Data.InteriorWall10 conTypB)
      annotation (Placement(transformation(extent={{40,-10},{60,10}})));
    IDEAS.Buildings.Components.Zone southZone(redeclare package Medium =
          IDEAS.Media.Air,
      V=str2ndFlr.Vol_2ndFlr_SZ,
      hZone=str2ndFlr.Height2ndFlr,
      nSurf=16)
      annotation (Placement(transformation(extent={{-22,-72},{18,-32}})));
    IDEAS.Buildings.Components.OuterWall[4] southWall(
      azi=str2ndFlr.azi_2ndFlr_SZ,
      A=str2ndFlr.AWall_2ndFlr_SZ,
      inc=str2ndFlr.inc_2ndFlr_SZ,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall constructionType)
      annotation (Placement(transformation(extent={{-96,-60},{-84,-40}})));
    IDEAS.Buildings.Components.Window[4] southWindows(
      azi=str2ndFlr.azi_2ndFlr_SZ,
      A=str2ndFlr.AWindows_2ndFlr_SZ,
      frac=str2ndFlr.FrameRatio_2ndFlr_SZ,
      inc=str2ndFlr.inc_2ndFlr_SZ,
      redeclare IDEAS.Buildings.Data.Glazing.Ins2ArGold glazing,
      redeclare IDEAS.Buildings.Data.Frames.AluminiumInsulated fraType,
      redeclare IDEAS.Buildings.Components.Shading.None shaType)
      annotation (Placement(transformation(extent={{-96,-84},{-84,-64}})));
    IDEAS.Buildings.Components.InternalWall glassWall(inc=IDEAS.Types.Tilt.Wall,
      A=str2ndFlr.AglassWall,
      redeclare IDEAS.Examples.PPD12.Data.CommonWall constructionType,
      azi=IDEAS.Types.Azimuth.W)
      "glass wall separating copy rooms from south zone" annotation (Placement(
          transformation(
          extent={{-6,-10},{6,10}},
          rotation=-90,
          origin={-28,20})));
    IDEAS.Buildings.Components.RectangularZoneTemplate bathroomZone(
      redeclare package Medium = IDEAS.Media.Air,
      bouTypFlo=IDEAS.Buildings.Components.Interfaces.BoundaryType.SlabOnGround,

      bouTypCei=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      aziA=IDEAS.Types.Azimuth.N,
      l=str2ndFlr.l_2ndFlr_BRZ,
      w=str2ndFlr.w_2ndFlr_BRZ,
      h=str2ndFlr.Height2ndFlr,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypCei,
      redeclare IDEAS.Buildings.Validation.Data.Constructions.HeavyFloor
        conTypFlo,
      bouTypA=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypB=IDEAS.Buildings.Components.Interfaces.BoundaryType.OuterWall,
      bouTypC=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      bouTypD=IDEAS.Buildings.Components.Interfaces.BoundaryType.InternalWall,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypA,
      redeclare IDEAS.Buildings.Data.Constructions.CavityWall conTypB,
      redeclare IDEAS.Buildings.Data.Constructions.EpcSolidWall2 conTypC,
      redeclare IDEAS.Buildings.Data.Constructions.EpcSolidWall2 conTypD)
      annotation (Placement(transformation(extent={{-100,40},{-80,60}})));
  equation

    //northZone connections
   connect(northZone.propsBus[1], northWall.propsBus_a) annotation (Line(
        points={{20,71.2},{20,71.2},{20,87},{90,87}},
        color={255,204,51},
        thickness=0.5));
    connect(northZone.propsBus[2], northWindows.propsBus_a) annotation (Line(
        points={{20,69.6},{20,87},{114,87}},
        color={255,204,51},
        thickness=0.5));
    connect(meetingRoom1.proBusA, northZone.propsBus[3]) annotation (Line(
        points={{-56,9},{-56,9},{-56,68},{20,68}},
        color={255,204,51},
        thickness=0.5));
    connect(meetingRoom2.proBusA, northZone.propsBus[4]) annotation (Line(
        points={{44,9},{20,9},{20,66.4}},
        color={255,204,51},
        thickness=0.5));
    connect(copyRooms.proBusA, northZone.propsBus[5]) annotation (Line(
        points={{-6,9},{-6,9},{-6,64.8},{20,64.8}},
        color={255,204,51},
        thickness=0.5));
    //southZone connections
    connect(southZone.propsBus[1], southWall[1].propsBus_a) annotation (Line(
        points={{-22,-40.25},{-48,-40.25},{-48,-48},{-85,-48}},
        color={255,204,51},
        thickness=0.5));
    connect(southZone.propsBus[2], southWall[2].propsBus_a);
    connect(southZone.propsBus[3], southWall[3].propsBus_a);
    connect(southZone.propsBus[4], southWall[4].propsBus_a);
    connect(southZone.propsBus[5], southWindows[1].propsBus_a) annotation (Line(
        points={{-22,-42.25},{-22,-42.25},{-22,-40},{-48,-40},{-48,-72},{-85,
            -72}},
        color={255,204,51},
        thickness=0.5));
    connect(southZone.propsBus[6], southWindows[2].propsBus_a);
    connect(southZone.propsBus[7], southWindows[3].propsBus_a);
    connect(southZone.propsBus[8], southWindows[4].propsBus_a);
    //Other connections

    connect(meetingRoom1.proBusB, copyRooms.proBusD) annotation (Line(
        points={{-41,6},{-26,6},{-26,0},{-9,0}},
        color={255,204,51},
        thickness=0.5));
    connect(meetingRoom2.proBusD, copyRooms.proBusB) annotation (Line(
        points={{41,0},{26,0},{26,6},{9,6}},
        color={255,204,51},
        thickness=0.5));
    connect(southZone.propsBus[9], meetingRoom1.proBusC) annotation (Line(
        points={{-22,-44.25},{-22,-44.25},{-22,-9},{-50,-9}},
        color={255,204,51},
        thickness=0.5));
    connect(southZone.propsBus[10], meetingRoom2.proBusC) annotation (Line(
        points={{-22,-44.75},{-22,-44.75},{-22,-20},{50,-20},{50,-9}},
        color={255,204,51},
        thickness=0.5));
    connect(southZone.propsBus[11], copyRooms.proBusC) annotation (Line(
        points={{-22,-45.25},{-22,-45.25},{-22,-20},{0,-20},{0,-9}},
        color={255,204,51},
        thickness=0.5));
    connect(southZone.propsBus[12], meetingRoom1.proBusD) annotation (Line(
        points={{-22,-45.75},{-22,-45.75},{-22,-20},{-66,-20},{-66,0},{-59,0}},

        color={255,204,51},
        thickness=0.5));
    connect(southZone.propsBus[13], meetingRoom2.proBusB) annotation (Line(
        points={{-22,-46.25},{-22,-20},{72,-20},{72,6},{59,6}},
        color={255,204,51},
        thickness=0.5));
    connect(copyRooms.proBusExt[1], glassWall.propsBus_b) annotation (Line(
        points={{-12,10},{-14,10},{-14,38},{-26,38},{-26,25}},
        color={255,204,51},
        thickness=0.5));
    connect(glassWall.propsBus_a, southZone.propsBus[14]) annotation (Line(
        points={{-26,15},{-28,15},{-28,-40},{-28,-46.75},{-22,-46.75}},
        color={255,204,51},
        thickness=0.5));
    connect(bathroomZone.proBusC, southZone.propsBus[15]) annotation (Line(
        points={{-90,41},{-90,-34},{-22,-34},{-22,-46},{-22,-48},{-22,-48},{-22,
            -47.25}},
        color={255,204,51},
        thickness=0.5));
    connect(bathroomZone.proBusD, southZone.propsBus[16]) annotation (Line(
        points={{-99,50},{-100,50},{-100,-34},{-100,-34},{-22,-34},{-22,-47.75}},

        color={255,204,51},
        thickness=0.5));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-140,
              -100},{140,100}}), graphics={
            Rectangle(extent={{-140,100},{140,-100}},
                                                  lineColor={28,108,200},
            fillColor={255,255,255},
            fillPattern=FillPattern.Solid),                                Text(
            extent={{-70,70},{70,-70}},
            lineColor={28,108,200},
            textString="2")}), Diagram(coordinateSystem(preserveAspectRatio=false,
            extent={{-140,-100},{140,100}})));
  end Floor2_STABLE;
end Examples;
