within INFRAX.SubSystems.BuildingEnvelope.Floor0;
model Floor0OptDes
  extends Floor0_noVent(
    FirstAid(redeclare
        IDEAS.Buildings.Components.InterzonalAirFlow.n50FixedPressure
        interzonalAirFlow, allowFlowReversal=false,
      n50=n50,
      aziA=INFRAX.Data.Orientations.NOptDes),
    servers(redeclare
        IDEAS.Buildings.Components.InterzonalAirFlow.n50FixedPressure
        interzonalAirFlow, n50=n50),
    MT2(redeclare IDEAS.Buildings.Components.InterzonalAirFlow.n50FixedPressure
        interzonalAirFlow, allowFlowReversal=false,
      n50=n50),
    MT1(redeclare IDEAS.Buildings.Components.InterzonalAirFlow.n50FixedPressure
        interzonalAirFlow, allowFlowReversal=false,
      n50=n50,
      aziA=INFRAX.Data.Orientations.NOptDes),
    hall(redeclare
        IDEAS.Buildings.Components.InterzonalAirFlow.n50FixedPressure
        interzonalAirFlow, n50=n50),
    kitchen(redeclare
        IDEAS.Buildings.Components.InterzonalAirFlow.n50FixedPressure
        interzonalAirFlow, allowFlowReversal=false,
      n50=n50),
    bathroomZone(redeclare
        IDEAS.Buildings.Components.InterzonalAirFlow.n50FixedPressure
        interzonalAirFlow, allowFlowReversal=false,
      n50=n50,
      redeclare Data.Constructions.OuterWallsOptDes conTypA,
      redeclare Data.Constructions.OuterWallsOptDes conTypD,
      aziA=INFRAX.Data.Orientations.NOptDes),
    storage(redeclare
        IDEAS.Buildings.Components.InterzonalAirFlow.n50FixedPressure
        interzonalAirFlow, n50=n50),
    northWall_SV(redeclare Data.Constructions.OuterWallsOptDes constructionType, azi=
          INFRAX.Data.Orientations.NOptDes),
    northWall_sto(redeclare Data.Constructions.OuterWallsOptDes
        constructionType, azi=INFRAX.Data.Orientations.NOptDes),
    KTouterWalls(redeclare Data.Constructions.OuterWallsOptDes constructionType, azi={
          INFRAX.Data.Orientations.EOptDes,INFRAX.Data.Orientations.SOptDes}),
    outerWall_MT1(redeclare Data.Constructions.OuterWallsOptDes
        constructionType, azi={INFRAX.Data.Orientations.EOptDes,INFRAX.Data.Orientations.S,
          INFRAX.Data.Orientations.incOptDes}),
    outerWall_HR(redeclare Data.Constructions.OuterWallsOptDes constructionType, azi=
          INFRAX.Data.Orientations.incOptDes),
    staW_wallB(azi=INFRAX.Data.Orientations.EOptDes),
    staW_wallC(azi=INFRAX.Data.Orientations.NOptDes),
    meetingRoom1Window_west(azi=INFRAX.Data.Orientations.incOptDes),
    meetingRoom1Window_east(azi=INFRAX.Data.Orientations.EOptDes),
    hallWindows_west(azi=INFRAX.Data.Orientations.incOptDes),
    hallWindows_south(azi=INFRAX.Data.Orientations.SOptDes),
    window_KT2(azi=INFRAX.Data.Orientations.SOptDes),
    internalWall_HR_MT1(azi=INFRAX.Data.Orientations.NOptDes),
    internalWall_SV_Sto(azi=INFRAX.Data.Orientations.WOptDes),
    internalWall_KT_Sto(azi=INFRAX.Data.Orientations.NOptDes),
    staE_wallD(azi=INFRAX.Data.Orientations.WOptDes),
    internalWall_HR_SV(azi=INFRAX.Data.Orientations.NOptDes),
    internalWall_HR_MT2(azi=INFRAX.Data.Orientations.NOptDes),
    staE_wallC(azi=INFRAX.Data.Orientations.NOptDes));

  parameter Boolean allowFlowReversal = true
    "= false to simplify equations, assuming, but not enforcing, no flow reversal"
    annotation(Dialog(tab="Assumptions"), Evaluate=true);
  parameter Modelica.SIunits.Volume[4] VZone = {kitchen.V, MT1.V, MT2.V, bathroomZone.V};

  Modelica.Fluid.Interfaces.FluidPort_b[4] airOutlet(
    each m_flow(max=if allowFlowReversal then Modelica.Constants.inf else 0),
    redeclare each package Medium = Medium)   "air outlet"
    annotation (Placement(transformation(extent={{22,90},{42,110}})));
  Modelica.Fluid.Interfaces.FluidPort_a[4] airInlet(
    each m_flow(min=if allowFlowReversal then -Modelica.Constants.inf else 0),
    redeclare each package Medium = Medium)   "air inlet"
    annotation (Placement(transformation(extent={{102,90},{122,110}})));
  Modelica.Blocks.Interfaces.RealOutput TSensor[4] annotation (Placement(
        transformation(
        extent={{-10,-10},{10,10}},
        rotation=270,
        origin={30,-110})));
  parameter Real n50=1.3
    "n50 value cfr airtightness, i.e. the ACH at a pressure diffence of 50 Pa";
equation

  connect(kitchen.port_b, airOutlet[1]) annotation (Line(points={{96,20},{64,20},
          {64,92.5},{32,92.5}},   color={0,127,255}));
  connect(kitchen.port_a, airInlet[1]) annotation (Line(points={{104,20},{110,20},
          {110,92.5},{112,92.5}},   color={0,127,255}));
  connect(MT1.port_b, airOutlet[2]) annotation (Line(points={{7.6,-18},{8,-18},{
          8,96},{32,96},{32,97.5}},  color={0,127,255}));
  connect(MT1.port_a, airInlet[2]) annotation (Line(points={{12.4,-18},{12.4,42},
          {112,42},{112,97.5}},  color={0,127,255}));
  connect(MT2.port_b, airOutlet[3]) annotation (Line(points={{-92.4,-58},{-62,-58},
          {-62,102.5},{32,102.5}}, color={0,127,255}));
  connect(MT2.port_a, airInlet[3]) annotation (Line(points={{-87.6,-58},{112,-58},
          {112,102.5}}, color={0,127,255}));
  connect(bathroomZone.port_b, airOutlet[4]) annotation (Line(points={{-92,80},{
          -92,107.5},{32,107.5}}, color={0,127,255}));
  connect(bathroomZone.port_a, airInlet[4]) annotation (Line(points={{-88,80},{112,
          80},{112,107.5}}, color={0,127,255}));
  connect(MT2.TSensor, TSensor[3]) annotation (Line(points={{-76.8,-67.6},{30,
          -67.6},{30,-112.5}}, color={0,0,127}));
  connect(MT1.TSensor, TSensor[2]) annotation (Line(points={{23.2,-27.6},{23.2,
          -65.8},{30,-65.8},{30,-107.5}}, color={0,0,127}));
  connect(kitchen.TSensor, TSensor[1])
    annotation (Line(points={{122,4},{30,4},{30,-102.5}}, color={0,0,127}));
  connect(bathroomZone.TSensor, TSensor[4])
    annotation (Line(points={{-79,72},{30,72},{30,-117.5}}, color={0,0,127}));
end Floor0OptDes;
