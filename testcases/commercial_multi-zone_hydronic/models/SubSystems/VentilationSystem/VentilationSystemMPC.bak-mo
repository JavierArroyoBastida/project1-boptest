within INFRAX.SubSystems.VentilationSystem;
model VentilationSystemMPC
  extends VentilationSystem(
      redeclare UnitTests.Components.FlowControlled_dp exhaustFan(
        massDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        addPowerToMedium=false,
        tau=10,
        energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        use_inputFilter=false,
        allowFlowReversal=false,
        m_flow_nominal=8850*1.225/3600,
        redeclare INFRAX.Data.Parameters.INFRAX_AHU_Fans per,
        dp_nominal=150,
        constantHead=150,
        dp_start=150,
        redeclare package Medium = MediumAir,
        prescribeSystemPressure=true),
      redeclare UnitTests.Components.FlowControlled_dp supplyFan(
        massDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        addPowerToMedium=false,
        use_inputFilter=false,
        allowFlowReversal=false,
        tau=60,
        energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        m_flow_nominal=10000*1.225/3600,
        dp_nominal(displayUnit="Pa") = 180,
        redeclare INFRAX.Data.Parameters.INFRAX_AHU_Fans per,
        dp_start=180,
        redeclare package Medium = MediumAir,
        prescribeSystemPressure=true),
      redeclare UnitTests.Components.FlowControlled_dp pump13(
        tau=30,
        energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        use_inputFilter=false,
        allowFlowReversal=false,
        addPowerToMedium=false,
        massDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        m_flow_nominal=hydronic.p13_m_flow,
        redeclare
          IDEAS.Fluid.Movers.Data.Pumps.Wilo.VeroLine40slash120dash1comma5slash2
          per,
        redeclare package Medium = MediumWater,
        inputType=IDEAS.Fluid.Types.InputType.Continuous,
        each dp_nominal(displayUnit="kPa") = 40000,
        T_start=284.15),
      redeclare UnitTests.Components.FlowControlled_dp pump6(
        tau=30,
        energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        use_inputFilter=false,
        allowFlowReversal=false,
        addPowerToMedium=false,
        massDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        inputType=IDEAS.Fluid.Types.InputType.Stages,
        m_flow_nominal=hydronic.p06_m_flow,
        redeclare
          IDEAS.Fluid.Movers.Data.Pumps.Wilo.Stratos40slash1to12CANPN6slash10 per,
        each dp_nominal(displayUnit="Pa") = 7.2*9804.139432,
        dp_start=0,
        redeclare package Medium = MediumWater),
      redeclare UnitTests.Components.FlowControlled_dp pump9(
        tau=30,
        energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        use_inputFilter=false,
        allowFlowReversal=false,
        addPowerToMedium=false,
        massDynamics=Modelica.Fluid.Types.Dynamics.SteadyState,
        m_flow_nominal=hydronic.p09_m_flow,
        redeclare
          IDEAS.Fluid.Movers.Data.Pumps.Wilo.VeroLine32slash160dash1comma1slash2
          per,
        each dp_nominal(displayUnit="kPa") = 14*9804.139432,
        inputType=IDEAS.Fluid.Types.InputType.Stages,
        redeclare package Medium = MediumGlycol),
        redeclare UnitTests.Components.CAV dp_ducts_supply(
          m_flow_nominal=air.m_nominal_supply_duct,
          redeclare package Medium = MediumAir,
          each allowFlowReversal=false,
          from_dp=true,
          dpMax(displayUnit="Pa") = 250,
          dpMin(displayUnit="Pa") = 50,
          dpFixed_nominal=100),
        redeclare UnitTests.Components.CAV dp_ducts_extract(
          m_flow_nominal=air.m_nominal_extract_duct,
          redeclare package Medium = MediumAir,
          each allowFlowReversal=false,
          from_dp=true,
          dpMax(displayUnit="Pa") = 250,
          dpMin(displayUnit="Pa") = 50),
        redeclare INFRAX.SubSystems.VentilationSystem.Components.TroxVavMPC vav_supply(
          use_inputFilter=false,
          allowFlowReversal=false,
          m_flow_nominal=air.m_nominal_supply_vav,
          fraMin=air.m_nominal_supply_vav_min ./ air.m_nominal_supply_vav,
          redeclare package Medium = MediumAir,
          from_dp=true,
          each dpValve_nominal=60,
          dpFixed_nominal=100,
          deltaM=0.02,
          deltax=0.02),
        redeclare INFRAX.SubSystems.VentilationSystem.Components.TroxVavMPC vav_extract(
          use_inputFilter=false,
          allowFlowReversal=false,
          m_flow_nominal=air.m_nominal_extract_vav,
          each dpValve_nominal=150,
          fraMin=air.m_nominal_extract_vav_min ./ air.m_nominal_extract_vav,
          redeclare package Medium = MediumAir,
          from_dp=true),
    redeclare HeatExchangers.CounterFlowHEX counterFlowHEX(
    allowFlowReversal1=false,
    redeclare package Medium1 = IDEAS.Media.Water,
    m1_flow_nominal=air.m_nominal_water,
    m2_flow_nominal=air.m_nominal_air,
    dp2_nominal=0,
    allowFlowReversal2=false,
    redeclare package Medium2 = MediumAir,
    dp1_nominal=0,
    UA=air.Q_nominal/Buildings.Fluid.HeatExchangers.BaseClasses.lmtd(
        air.TWatSup_nominal,
        air.TWatRet_nominal,
        air.TAirSup_nominal,
        air.TAirRet_nominal)));

equation
    connect(vav_extract[1:14].y, signalBus.VAV_signal_extract[1:14]) annotation (Line(
      points={{31.34,58.45},{-83.33,58.45},{-83.33,34.07},{-199.93,34.07}},
      color={0,0,127},
      visible=false), Text(
      string="%second",
      index=1,
      extent={{6,3},{6,3}}));
    connect(vav_supply.y, signalBus.VAV_signal) annotation (Line(
      points={{33.66,-73.55},{-83.17,-73.55},{-83.17,34.07},{-199.93,34.07}},
      color={0,0,127},
      visible=false), Text(
      string="%second",
      index=1,
      extent={{6,3},{6,3}}));


end VentilationSystemMPC;
