within INFRAX.SubSystems.VentilationSystem.Components;
model CAVMPC "Constant air volume model"
  extends IDEAS.Fluid.Interfaces.PartialTwoPortInterface;
  parameter Modelica.SIunits.Pressure dpFixed_nominal(displayUnit="Pa") = 0
    "Series pressure drop at nominal flow rate in addition to dp_nominal";
  parameter Boolean from_dp = true
    "= true, use m_flow = f(dp) else dp = f(m_flow)"
    annotation (Evaluate=true, Dialog(tab="Advanced"));
  parameter Real l2 = 0.001
    "Gain for mass flow increase if pressure is above nominal pressure"
    annotation(Dialog(tab="Advanced"));
  parameter Real l(min=1e-10, max=1) = 0.0001
    "Valve leakage, l=Kv(y=0)/Kv(y=1)";
  parameter Real nParallel = 1 "Number of units in parallel";
  parameter Modelica.SIunits.PressureDifference dpMin
    "Minimum pressure difference for which CAV can track the set point";
  parameter Modelica.SIunits.PressureDifference dpMax
    "Maximum pressure difference for which CAV can track the set point";
  parameter Modelica.SIunits.Density rhoStd=Medium.density_pTX(
      101325,
      Medium.T_default,
      Medium.X_default)
    "Inlet density for which valve coefficients are defined"
  annotation(Dialog(group="Nominal condition", tab="Advanced"));
  parameter Real deltaM=0.02
    "Fraction of nominal flow rate where linearization starts, if y=1";
  parameter Real deltax=0.02
    "Transition interval for flow rate";
  UnitTests.Components.TwoWayPressureIndependent val(
    final dpFixed_nominal=dpFixed_nominal,
    redeclare final package Medium = Medium,
    final allowFlowReversal=allowFlowReversal,
    final from_dp=from_dp,
    final CvData=IDEAS.Fluid.Types.CvTypes.OpPoint,
    m_flow_nominal=nParallel*m_flow_nominal,
    final l2=l2,
    final deltaM=deltaM,
    final l=l,
    final rhoStd=rhoStd,
    final show_T=show_T,
    final deltax=deltax,
    final homotopyInitialization=false,
    final use_inputFilter=false,
    final dpValve_nominal=dpMin) "Pressure independent valve"
    annotation (Placement(transformation(extent={{-10,-10},{10,10}})));
  Modelica.Blocks.Sources.RealExpression yCAV(y=1) "Constant set point of CAV"
    annotation (Placement(transformation(extent={{-40,34},{-20,52}})));

equation
  connect(val.port_a, port_a)
    annotation (Line(points={{-10,0},{-55,0},{-100,0}}, color={0,127,255}));
  connect(val.port_b, port_b) annotation (Line(points={{10,0},{56,0},{100,0}},
               color={0,127,255}));
  connect(yCAV.y, val.y)
    annotation (Line(points={{-19,43},{0,43},{0,12}}, color={0,0,127}));
    annotation (Dialog(enable = not use_massFlowRate),
              Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,
            -100},{100,100}})),
    Icon(graphics={
        Rectangle(extent={{-60,40},{60,-40}}, lineColor={0,0,255}),
        Line(
          points={{-54,0},{-14,0},{-20,-6}},
          color={0,0,255},
          smooth=Smooth.None),
        Line(
          points={{-14,0},{-20,6}},
          color={0,0,255},
          smooth=Smooth.None),
        Rectangle(extent={{60,16},{100,-16}},
                                           lineColor={0,0,255}),
        Text(
          extent={{-8,-30},{54,30}},
          lineColor={28,108,200},
          textString="CAV"),
        Rectangle(extent={{-100,14},{-60,-18}},
                                           lineColor={0,0,255})}));
end CAVMPC;
