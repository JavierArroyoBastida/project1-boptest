within INFRAX.SubSystems.VentilationSystem.Components.Dependencies;
model ThermostaticThreeWayValvePI
  extends IDEAS.Fluid.Actuators.Valves.Simplified.BaseClasses.Partial3WayValve(
                                                          vol(allowFlowReversal=
         true, massDynamics=Modelica.Fluid.Types.Dynamics.SteadyState),tau=40);

 parameter Modelica.SIunits.TemperatureDifference dT_nominal = 50
    "Nominal/maximum temperature difference between inlet ports, used for regularization";

  Modelica.Blocks.Interfaces.RealInput TMixedSet "Set point temperature"
    annotation (Placement(transformation(
        extent={{20,-20},{-20,20}},
        rotation=90,
        origin={0,106}), iconTransformation(
        extent={{10,-10},{-10,10}},
        rotation=90,
        origin={-10,96})));

  Modelica.Blocks.Sources.RealExpression realExpression(y=-(1 - switch.y)*
        port_b.m_flow)
    annotation (Placement(transformation(extent={{92,-60},{28,-40}})));

  INFRAX.SubSystems.VentilationSystem.Components.Dependencies.conPID_rev_reset conPID(
    final controllerType=Modelica.Blocks.Types.SimpleController.PI,
    use_onOffSignal=true,
    Ti=tau,
    reversed=false,
    final yMax=1 - Modelica.Constants.eps,
    final yMin=Modelica.Constants.eps,
    k=k) annotation (Placement(transformation(extent={{20,60},{40,80}})));
  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temperatureSensor
    annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={-30,20})));
 Modelica.Blocks.Sources.BooleanExpression
                                         realExpression1(y=if splRev.y > 0.5
         then true else false)
    annotation (Placement(transformation(extent={{118,80},{60,96}})));

protected
  Real delta_h;
public
  Modelica.Blocks.Sources.RealExpression realExpression3(y=delta_h)
    annotation (Placement(transformation(extent={{-90,66},{-72,84}})));
  Modelica.Blocks.Logical.Hysteresis hys(
    uLow=-dT_nominal/200*Medium.specificHeatCapacityCp(Medium.setState_pTX(
        Medium.p_default,
        Medium.T_default,
        Medium.X_default)),
    uHigh=+dT_nominal/200*Medium.specificHeatCapacityCp(Medium.setState_pTX(
        Medium.p_default,
        Medium.T_default,
        Medium.X_default)))
    "Hysteresis element to switch controller on and off"
    annotation (Placement(transformation(extent={{-66,70},{-56,80}})));
  Modelica.Blocks.Math.BooleanToReal booleanToReal
    annotation (Placement(transformation(extent={{-50,70},{-40,80}})));
  IDEAS.Utilities.Math.Splice splRev(deltax=0.1)
    annotation (Placement(transformation(extent={{-32,58},{-20,70}})));
public
  Modelica.Blocks.Sources.RealExpression realExpression4(y=-port_b.m_flow -
        m_flow_nominal/100)
    annotation (Placement(transformation(extent={{-108,54},{-50,70}})));
  Modelica.Blocks.Sources.Constant const(k=0)
    annotation (Placement(transformation(extent={{-78,38},{-72,44}})));
  IDEAS.Utilities.Math.Splice splOnOff(deltax=0.1)
    annotation (Placement(transformation(extent={{-32,40},{-20,52}})));
  Modelica.Blocks.Sources.Constant const1(k=1)
    annotation (Placement(transformation(extent={{-78,48},{-72,54}})));
 Modelica.Blocks.Sources.BooleanExpression
                                         realExpression2(y=if splOnOff.y > 0.5
         then true else false)
    annotation (Placement(transformation(extent={{100,96},{52,112}})));
  INFRAX.SubSystems.VentilationSystem.Components.Dependencies.conPID_rev_reset conPID_rev(
    final controllerType=Modelica.Blocks.Types.SimpleController.PI,
    use_onOffSignal=true,
    Ti=tau,
    reversed=true,
    final yMax=1 - Modelica.Constants.eps,
    final yMin=Modelica.Constants.eps,
    k=k) annotation (Placement(transformation(extent={{20,16},{40,36}})));
  Modelica.Blocks.Logical.Switch switch
    annotation (Placement(transformation(extent={{78,66},{98,46}})));
  Modelica.Blocks.Logical.And and1 annotation (Placement(transformation(
        extent={{-4,-4},{4,4}},
        rotation=270,
        origin={28,90})));
  Modelica.Blocks.Logical.Not not1
    annotation (Placement(transformation(extent={{42,94},{36,100}})));
  Modelica.Blocks.Logical.And and2 annotation (Placement(transformation(
        extent={{-4,-4},{4,4}},
        rotation=270,
        origin={28,46})));
  parameter Real k=2 "Gain of controller";
  Modelica.Blocks.Interfaces.RealInput TSupply "Set point temperature"
    annotation (Placement(transformation(
        extent={{20,-20},{-20,20}},
        rotation=180,
        origin={-104,20}), iconTransformation(
        extent={{10,-10},{-10,10}},
        rotation=180,
        origin={-96,30})));
equation
  delta_h=inStream(port_a2.h_outflow)-inStream(port_a1.h_outflow);

  connect(realExpression.y, idealSource.m_flow_in) annotation (Line(
      points={{24.8,-50},{8,-50}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(temperatureSensor.port, vol.heatPort) annotation (Line(
      points={{-30,10},{-10,10}},
      color={191,0,0},
      smooth=Smooth.None));
  connect(TMixedSet, conPID.u_s) annotation (Line(
      points={{0,106},{0,70},{18,70}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(realExpression3.y, hys.u) annotation (Line(
      points={{-71.1,75},{-67,75}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(hys.y, booleanToReal.u) annotation (Line(
      points={{-55.5,75},{-51,75}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(booleanToReal.y, splRev.u1) annotation (Line(
      points={{-39.5,75},{-35.75,75},{-35.75,67.6},{-33.2,67.6}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(realExpression4.y, splRev.x) annotation (Line(
      points={{-47.1,62},{-44,62},{-44,64},{-33.2,64}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(const.y, splRev.u2) annotation (Line(
      points={{-71.7,41},{-40,41},{-40,60.4},{-33.2,60.4}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(const.y, splOnOff.u2) annotation (Line(
      points={{-71.7,41},{-40,41},{-40,42.4},{-33.2,42.4}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(realExpression4.y, splOnOff.x) annotation (Line(
      points={{-47.1,62},{-46,62},{-46,50},{-38,50},{-38,46},{-33.2,46}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(const1.y, splOnOff.u1) annotation (Line(
      points={{-71.7,51},{-54,51},{-54,52},{-36,52},{-36,49.6},{-33.2,49.6}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(TMixedSet, conPID_rev.u_s) annotation (Line(
      points={{0,106},{0,26},{18,26}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(conPID.y, switch.u3) annotation (Line(
      points={{41,70},{54,70},{54,64},{76,64}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(switch.u1, conPID_rev.y) annotation (Line(
      points={{76,48},{56,48},{56,26},{41,26}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(realExpression2.y, and1.u2) annotation (Line(
      points={{49.6,104},{24.8,104},{24.8,94.8}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(and1.y, conPID.on) annotation (Line(
      points={{28,85.6},{28,80.8}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(not1.y, and1.u1) annotation (Line(
      points={{35.7,97},{28,97},{28,94.8}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(not1.u, realExpression1.y) annotation (Line(
      points={{42.6,97},{46,97},{46,88},{57.1,88}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(realExpression2.y, and2.u2) annotation (Line(
      points={{49.6,104},{14,104},{14,50.8},{24.8,50.8}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(realExpression1.y, and2.u1) annotation (Line(
      points={{57.1,88},{46,88},{46,50.8},{28,50.8}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(realExpression1.y, switch.u2) annotation (Line(
      points={{57.1,88},{46,88},{46,56},{76,56}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(and2.y, conPID_rev.on) annotation (Line(
      points={{28,41.6},{28,36.8}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(TSupply, conPID_rev.u_m) annotation (Line(points={{-104,20},{-70,
          20},{-70,14},{30,14}}, color={0,0,127}));
  connect(TSupply, conPID.u_m) annotation (Line(points={{-104,20},{-86,20},
          {-70,20},{-70,32},{10,32},{10,58},{30,58}}, color={0,0,127}));
  annotation (Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,
            -100},{100,100}}), graphics={Rectangle(extent={{-96,86},{-14,36}},
            lineColor={0,0,0}), Text(
          extent={{-100,96},{-4,82}},
          lineColor={0,0,0},
          textString="regularization for mFlow and hysteris to avoid to much switchings"),
        Text(
          extent={{-122,76},{-88,74}},
          lineColor={0,0,0},
          textString="delta_h > 0 if 
port_a2 hot"),
        Text(
          extent={{-102,-6},{-68,-8}},
          lineColor={0,0,0},
          textString="if rev = true,
port_a1 is hot")}), Documentation(info="<html>
<p>This component models a thermostatic three way valve. The valve opening is controlled by a PID which tends to reach the set point temperature. 
The PID is automatically reverted when the temperatures of the legs change. The pid is switch off when the temperature difference between the two
legs is too small. Finally, a minimal opening of 0.01 and a maximal opening of 0.99 is fixed to ensure that the temperature to the legs is representative.</p>
</html>"));
end ThermostaticThreeWayValvePI;
