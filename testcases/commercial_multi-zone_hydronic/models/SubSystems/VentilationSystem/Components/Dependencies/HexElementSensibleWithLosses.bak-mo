within INFRAX.SubSystems.VentilationSystem.Components.Dependencies;
model HexElementSensibleWithLosses
  "Element of a heat exchanger with humidity condensation of fluid 2"
  import Buildings;
  extends Buildings.Fluid.HeatExchangers.BaseClasses.PartialHexElement(
      redeclare final Buildings.Fluid.MixingVolumes.MixingVolume vol2(
      final energyDynamics=energyDynamics,
      final massDynamics=energyDynamics));

  parameter Modelica.SIunits.Time tauLoss=3600*5;

  parameter Modelica.SIunits.HeatCapacity C1=
      Medium1.specificHeatCapacityCp(Medium1.setState_pTX(
      p=Medium1.p_default,
      T=Medium1.T_default,
      X=Medium1.X_default))*vol1.V*rho1_nominal;

  parameter Modelica.SIunits.HeatCapacity C2=
      Medium2.specificHeatCapacityCp(
      Medium2.setState_pTX(
      p=Medium2.p_default,
      T=Medium2.T_default,
      X=Medium2.X_default))*vol2.V*rho2_nominal;
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor(G=
        C/tauLoss) annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={-72,-80})));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a heatPort
    annotation (Placement(transformation(extent={{-10,-110},{10,-90}})));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor2(G=C2/
        tauLoss) annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={-46,-80})));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor thermalConductor1(G=C1/
        tauLoss)   annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={-98,-80})));
  Modelica.Thermal.HeatTransfer.Components.Convection con3(dT(min=-200))
    "Convection (and conduction) on fluid side 2"
    annotation (Placement(transformation(extent={{-60,-58},{-40,-38}}, rotation=
           0)));
  Modelica.Thermal.HeatTransfer.Components.Convection con4(dT(min=-200))
    "Convection (and conduction) on fluid side 1"
    annotation (Placement(transformation(extent={{-62,46},{-42,66}}, rotation=0)));
equation

  connect(thermalConductor.port_a, heatPort) annotation (Line(
      points={{-72,-90},{-72,-100},{0,-100}},
      color={191,0,0},
      smooth=Smooth.None));
  connect(thermalConductor.port_b, mas.port) annotation (Line(
      points={{-72,-70},{-72,0}},
      color={191,0,0},
      smooth=Smooth.None));
  connect(thermalConductor1.port_a, heatPort) annotation (Line(
      points={{-98,-90},{-98,-100},{0,-100}},
      color={191,0,0},
      smooth=Smooth.None));
  connect(thermalConductor2.port_a, heatPort) annotation (Line(
      points={{-46,-90},{-46,-100},{0,-100}},
      color={191,0,0},
      smooth=Smooth.None));
  connect(thermalConductor2.port_b, con3.solid) annotation (Line(
      points={{-46,-70},{-46,-64},{-60,-64},{-60,-48}},
      color={191,0,0},
      smooth=Smooth.None));
  connect(con3.Gc, Gc_2) annotation (Line(
      points={{-50,-38},{-50,-34},{-34,-34},{-34,-76},{40,-76},{40,-100}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(con3.fluid, vol2.heatPort) annotation (Line(
      points={{-40,-48},{-14,-48},{-14,-40},{20,-40},{20,-60},{12,-60}},
      color={191,0,0},
      smooth=Smooth.None));
  connect(con4.fluid, vol1.heatPort) annotation (Line(
      points={{-42,56},{-26,56},{-26,60},{-10,60}},
      color={191,0,0},
      smooth=Smooth.None));
  connect(con4.Gc, Gc_1) annotation (Line(
      points={{-52,66},{-52,72},{-40,72},{-40,100}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(con4.solid,thermalConductor1. port_b) annotation (Line(
      points={{-62,56},{-80,56},{-80,40},{-100,40},{-100,-40},{-86,-40},{-86,-66},
          {-98,-66},{-98,-70}},
      color={191,0,0},
      smooth=Smooth.None));
  annotation (
    Documentation(info="<html>
<p>
Element of a heat exchanger with humidity condensation and
with dynamics of the fluids and the solid. 
</p>
<p>
See 
<a href=\"modelica://Buildings.Fluid.HeatExchangers.BaseClasses.PartialHexElement\">
Buildings.Fluid.HeatExchangers.BaseClasses.PartialHexElement</a>
for a description of the physics.
</p>
</html>", revisions="<html>
<ul>
<li>
June 18, 2014, by Michael Wetter:<br/>
Added initialization for <code>mas</code> to avoid a warning during translation.
</li>
<li>
September 11, 2013, by Michael Wetter:<br/>
Separated old model into one for dry and for wet heat exchangers.
This was done to make the coil compatible with OpenModelica.
</li>
<li>
May 1, 2013, by Michael Wetter:<br/>
Changed the redeclaration of <code>vol2</code> to be replaceable,
as <code>vol2</code> is replaced in some models.
</li>
<li>
April 19, 2013, by Michael Wetter:<br/>
Made instance <code>MassExchange</code> replaceable, rather than
conditionally removing the model, to avoid a warning
during translation because of unused connector variables.
</li>
<li>
July 11, 2011, by Michael Wetter:<br/>
Removed assignment of medium in <code>vol1</code> and <code>vol2</code>,
since this assignment is already done in the base class using the
<code>final</code> modifier.
</li>
<li>
August 12, 2008, by Michael Wetter:<br/>
Introduced option to compute each medium using a steady state model or
a dynamic model.
</li>
<li>
March 25, 2008, by Michael Wetter:<br/>
First implementation.
</li>
</ul>
</html>"),
    Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
            100}})),
    Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,100}}),
        graphics));
end HexElementSensibleWithLosses;
